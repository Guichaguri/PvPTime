buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'org.yaml:snakeyaml:1.12'
    }
}

import org.yaml.snakeyaml.Yaml
import org.yaml.snakeyaml.DumperOptions
import org.yaml.snakeyaml.DumperOptions.FlowStyle;

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'signing'

group 'com.guichaguri.pvptime'
version ver

sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

repositories {
    jcenter()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
    maven {
        name = 'spigot'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sk89q'
        url = "http://maven.sk89q.com/repo/"
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // Common
    compile project(':common')

    // Sponge
    compile 'org.spongepowered:spongeapi:8.0.0-SNAPSHOT'

    // Bukkit
    compile 'org.bukkit:bukkit:1.13-R0.1-SNAPSHOT'

    // WorldGuard and WorldEdit
    compile 'com.sk89q.worldguard:worldguard-legacy:6.2'
    compile 'com.sk89q.worldedit:worldedit-core:6.1.4-SNAPSHOT'

    // Towny - Add the towny jar to the libs directory
    compile name: 'Towny'
}

def processYaml(Yaml yaml, File file) {
    println("Updating version from " + file.name)

    def data = (Map)yaml.load(file.text)
    data.put("version", ver);
    file.text = yaml.dump(data)
}

processResources {
    def options = new DumperOptions();
    options.prettyFlow = true;
    options.defaultFlowStyle = FlowStyle.BLOCK
    def yaml = new Yaml(options)

    processYaml(yaml, file("src/main/resources/plugin.yml"))
}

shadowJar {
    baseName = 'PvPTime-Plugin'
    classifier = null

    dependencies {
        include project(':common')
    }
}

signing {
    sign project.tasks.shadowJar
}